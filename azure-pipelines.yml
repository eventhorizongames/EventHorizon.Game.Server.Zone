name: $(MajorVersion).$(MinorVersion)$(rev:.r)
pool:
  name: Default


variables:
  BuildConfiguration: Release
  BuildPlatform: x64
  disable.coverage.autogenerate: true
  Parameters.RestoreBuildProjects: '*.sln'
  Parameters.TestProjects: '*.sln'
  IsMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]


jobs:
- job: Build_Base_Image
  steps:
  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 18.03.0-ce
      releaseType: stable

  - task: Docker@2
    displayName: Build Base Image (docker-hub) - EventHorizon.Game.Server.Zone
    inputs: 
      command: build
      containerRegistry: docker-hub
      repository: canhorn/ehz-platform-server-zone
      Dockerfile: Dockerfile
      arguments: --target base --build-arg BUILD_VERSION=$(Build.BuildNumber) --build-arg BUILD_CONFIGURATION=$(BuildConfiguration) 
      tags: |
        $(Build.BuildNumber)-base-build


- job: Test_and_Report_Generation
  dependsOn:
  - Build_Base_Image
  steps:
  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 18.03.0-ce
      releaseType: stable

  - task: Docker@2
    displayName: Build Image (docker-hub) - EventHorizon.Game.Server.Zone
    inputs: 
      command: build
      containerRegistry: docker-hub
      repository: canhorn/ehz-platform-server-zone
      Dockerfile: Dockerfile
      arguments: --target test-report-generation --build-arg BUILD_VERSION=$(Build.BuildNumber)-reporting --build-arg BUILD_CONFIGURATION=$(BuildConfiguration) 
      tags: |
        $(Build.BuildNumber)-reporting

  - bash: docker run --name $CONTAINER_NAME canhorn/ehz-platform-server-zone:$CONTAINER_TAG
    displayName: Run Testing/Reporting Container
    env:
      CONTAINER_NAME: $(Build.BuildNumber)-reporting
      CONTAINER_TAG: $(Build.BuildNumber)-reporting
      BUILD_CONFIGURATION: $(BuildConfiguration)

  - bash: docker cp $CONTAINER_NAME:/TestResults $(System.DefaultWorkingDirectory)/TestResults
    displayName: Copy TestResults from Reporting Container
    condition: succeededOrFailed()
    env:
      CONTAINER_NAME: $(Build.BuildNumber)-reporting

  - task: PublishTestResults@2
    displayName: Publish TestResults
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/TestResult*.trx' 
      searchFolder: $(System.DefaultWorkingDirectory)/TestResults/Reports
      publishRunAttachments: true

  # Use this to publish the results pulled from the test-report-generation build target
  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/TestResults/Coverage/Reports/Cobertura.xml
      reportDirectory: $(System.DefaultWorkingDirectory)/TestResults/Coverage/Reports

  - bash: docker rm $CONTAINER_NAME
    displayName: Cleanup Reporting Container
    condition: succeededOrFailed()
    env:
      CONTAINER_NAME: $(Build.BuildNumber)-reporting


- job: Publish_Runtime
  dependsOn:
  - Test_and_Report_Generation
  steps:
  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 18.03.0-ce
      releaseType: stable

  - task: Docker@2
    displayName: Build Main Image (docker-hub) - EventHorizon.Game.Server.Zone
    inputs: 
      command: build
      containerRegistry: docker-hub
      repository: canhorn/ehz-platform-server-zone
      Dockerfile: Dockerfile
      arguments: --target runtime --build-arg BUILD_VERSION=$(Build.BuildNumber) --build-arg BUILD_CONFIGURATION=$(BuildConfiguration) 
      tags: |
        latest
        $(Build.BuildNumber)

  - task: Docker@2
    displayName: Push Main Image - EventHorizon.Game.Server.Zone 
    condition: and(succeeded(), eq(variables.IsMain, true))
    inputs: 
      command: push
      containerRegistry: docker-hub
      repository: canhorn/ehz-platform-server-zone
      Dockerfile: Dockerfile.devops
      tags: |
        latest
        $(Build.BuildNumber)
